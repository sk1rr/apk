name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk python3-pip unzip wget

          # Download and install Android command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          # Set Android environment variables
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

          # Update SDK Manager
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update

          # Accept all SDK licenses automatically
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          # Install necessary SDK components and NDK
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "system-images;android-30;google_apis;x86_64"

          # Install Android NDK and build tools version 36
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653" "build-tools;36.0.0-rc3"

      # Cache Android SDK components
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: $HOME/android-sdk
          key: sdk-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            sdk-${{ runner.os }}-

      # Cache Buildozer global directory
      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      # Cache Buildozer build directory
      - name: Cache Buildozer build directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      # Install Cython
      - name: Install Cython
        run: |
          pip3 install cython

      # Install Buildozer and dependencies
      - name: Install Buildozer
        run: |
          pip3 install --upgrade pip
          pip3 install buildozer

      # Build the APK
      - name: Build APK
        run: |
          buildozer appclean  # Clean up previous builds
          rm -rf ~/.buildozer  # Delete Buildozer cache
          buildozer android debug

      # Upload the generated APK as an artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: bin/*.apk
